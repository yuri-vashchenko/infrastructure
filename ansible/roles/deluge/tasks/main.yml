- name: Include variables
  ansible.builtin.include_vars:
    file: defaults/meta.yml

- name: Create deluge directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ docker_compose_directory_mask }}"
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
  loop: "{{ deluge_dirs }}"
  become: true

- name: Get info on the {{ container_name }} container
  community.docker.docker_container_info:
    name: "{{ container_name }}"
  register: deluge_docker_status

- name: Does deluge container exist?
  ansible.builtin.set_fact:
    deluge_exists: true
  when: deluge_docker_status.exists

- name: Is docker container running?
  ansible.builtin.set_fact:
    deluge_running: true
  when: deluge_exists is defined and deluge_docker_status.container['State']['Running']

- name: Make sure the deluge container is created and running
  when: enable_deluge | default(false)
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: linuxserver/deluge:{{ deluge_version }}
    volumes:
      - "{{ deluge_config_dir }}:/config"
      - "{{ deluge_download_dir }}:/data"
    env:
      PUID: "3000"
      PGID: "3000"
      TZ: "{{ timezone }}"
      UMASK_SET: "002"
    networks:
      - name: traefik
    labels:
      traefik.enable: "true"
      traefik.docker.network: traefik
      # routers
      traefik.http.routers.deluge-web.rule: Host(`{{ container_name }}.local`)
      traefik.http.routers.deluge-web.service: deluge-ui
      traefik.http.routers.deluge-web.entrypoints: web
      traefik.http.routers.deluge-web.priority: "2000"
      # services
      traefik.http.services.deluge-ui.loadbalancer.server.port: "{{ deluge.port }}"
      # middlewares
      traefik.http.middlewares.deluge-ratelimit.ratelimit.average: "5"
      traefik.http.middlewares.deluge-ratelimit.ratelimit.burst: "1000"
      traefik.http.middlewares.deluge-compress.compress: "true"
      # middlewares for routers
      traefik.http.routers.deluge-web.middlewares: deluge-ratelimit,deluge-compress
    hostname: server-deluge
    state: started
    restart_policy: unless-stopped
