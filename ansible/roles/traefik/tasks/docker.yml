- name: Make sure the docker_proxy container is created and running
  when: enable_docker_proxy | default(false) and enable_traefik | default(false)
  community.docker.docker_container:
    name: docker_proxy
    image: tecnativa/docker-socket-proxy:{{ docker_proxy_version }}
    state: started
    restart_policy: unless-stopped
    env:
      CONTAINERS: "1"
      INFO: "1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - name: proxy_private

- name: Recheck container status
  ansible.builtin.include_tasks: check_status.yml

- name: Make sure the traefik container is created and running
  when: enable_traefik | default(false) and traefik_docker_proxy_running | default(false)
  community.docker.docker_container:
    name: traefik
    image: traefik:{{ traefik_version }}
    networks:
      - name: traefik
      - name: dmz
        ipv4_address: "{{ dmz_base }}.{{ traefik_ip }}"
      - name: home_lan
        ipv4_address: "{{ home_lan_base }}.{{ traefik_ip }}"
      - name: proxy_private
    security_opts:
      - no-new-privileges:true
    state: started
    user: "{{ docker_user.id }}"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      # - "{{ home_lan_base }}.{{ traefik_ip }}:8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tmp/traefik-logs:/var/log/traefik
      - "{{ traefik_config_dir }}:/etc/traefik"
    links:
      - docker_proxy
    labels:
      # global redirect to https
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.routers.http-catchall.priority: "1000"
      #
      # Watchtower
      com.centurylinklabs.watchtower.enable: "true"
    restart_policy: unless-stopped
