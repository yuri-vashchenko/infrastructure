- name: Include vault
  ansible.builtin.include_vars: vault.yml

- name: Create app directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ docker_compose_directory_mask }}"
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
  loop: "{{ vaultwarden_dirs }}"
  become: true

- name: Make sure the vaultwarden container is created and running
  when: enable_vaultwarden | default(false)
  community.docker.docker_container:
    name: vaultwarden
    image: vaultwarden/server:latest
    pull: true
    env:
      TZ: "{{ timezone }}"
      SIGNUPS_ALLOWED: "true"
      DOMAIN: https://vaultwarden.{{ host }}
      SHOW_PASSWORD_HINT: "false"
      INVITATIONS_ALLOWED: "true"
      ROCKET_WORKERS: "{{ ansible_processor_nproc // 2 }}"
      WEBSOCKET_ENABLED: "true"
      ADMIN_TOKEN: "{{ vaultwarden_admin_token }}"
      YUBICO_CLIENT_ID: "{{ vaultwarden_yubico_client_id }}"
      YUBICO_SECRET_KEY: "{{ vaultwarden_yubico_secret_key }}"
    networks:
      - name: traefik
    hostname: server-vaultwarden
    state: started
    volumes:
      - "{{ vaultwarden_data_dir }}:/data/"
    labels:
      traefik.enable: "true"
      traefik.docker.network: traefik
      # routers // ui
      traefik.http.routers.vaultwarden-ui.rule: Host(`vaultwarden.{{ host }}`)
      traefik.http.routers.vaultwarden-ui.service: vaultwarden-ui
      # routers // websocket
      traefik.http.routers.vaultwarden-websocket.rule: Host(`vaultwarden.{{ host }}`) && Path(`/notifications/hub`)
      traefik.http.routers.vaultwarden-websocket.service: vaultwarden-websocket
      # services
      traefik.http.services.vaultwarden-ui.loadbalancer.server.port: "80"
      traefik.http.services.vaultwarden-websocket.loadbalancer.server.port: "3012"
      # middlewares
      traefik.http.middlewares.vaultwarden-ratelimit.ratelimit.average: "5"
      traefik.http.middlewares.vaultwarden-ratelimit.ratelimit.burst: "1000"
      traefik.http.middlewares.vaultwarden-compress.compress: "true"
      # middlewares for routers
      traefik.http.routers.vaultwarden-ui.middlewares: vaultwarden-ratelimit,vaultwarden-compress
      traefik.http.routers.vaultwarden-websocket.middlewares: vaultwarden-ratelimit,vaultwarden-compress
      #
      # Watchtower
      com.centurylinklabs.watchtower.enable: "true"
    restart_policy: unless-stopped

- name: Create vaultwarden backup directories
  when: enable_vaultwarden_backup | default(false)
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ docker_compose_directory_mask }}"
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
  loop: "{{ vaultwarden_backup_dirs }}"
  become: true

- name: Copy vaultwarden backup setup files
  when: enable_vaultwarden_backup | default(false)
  ansible.builtin.copy:
    src: files/backup/
    dest: "{{ vaultwarden_backup_setup_dir }}"
    mode: "{{ docker_compose_directory_mask }}"
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
  become: true

- name: Build vaultwarden backup image
  when: enable_vaultwarden_backup | default(false)
  community.docker.docker_image:
    name: vaultwarden_backup
    state: present
    build:
      path: "{{ vaultwarden_backup_setup_dir }}"
    source: build

- name: Create backup container
  when: enable_vaultwarden_backup | default(false)
  community.docker.docker_container:
    name: vaultwarden_backup
    image: vaultwarden_backup
    state: started
    env:
      DELETE_AFTER: "30"
      CRON_TIME: 12 03 * * *  # Runs at 03:12 every day.
      UID: "{{ docker_user.id }}"
      GID: "{{ docker_user.id }}"
    volumes:
      - "{{ vaultwarden_data_dir }}:/data:ro"  # Read-only
      - "{{ vaultwarden_backup_dir }}:/backups"
      - /etc/localtime:/etc/localtime:ro  # Container uses date from host.
    restart_policy: unless-stopped
