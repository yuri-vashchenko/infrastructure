- name: Include vault
  ansible.builtin.include_vars: vault.yml

- name: Include vault
  ansible.builtin.include_vars: "{{ role_path }}/../mariadb/vars/vault.yml"

- name: Include variables
  ansible.builtin.include_vars:
    file: defaults/meta.yml

- name: Install packages
  ansible.builtin.package:
    name:
      - libmysqlclient-dev
      - mysql-client
    state: present
  become: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ docker_compose_directory_mask }}"
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
  loop: "{{ nextcloud_dirs }}"
  become: true

- name: Create mariadb database for nextcloud
  community.mysql.mysql_db:
    name: nextcloud
    state: present
    login_host: 127.0.0.1
    login_port: 3306
    login_user: root
    login_password: "{{ mariadb_root_password }}"

- name: Create mariadb user for nextcloud
  community.mysql.mysql_user:
    name: "{{ nextcloud_mariadb_user }}"
    password: "{{ nextcloud_mariadb_password }}"
    host: nextcloud.mariadb
    priv:
      # '*.*': ALL
      'nextcloud.*': ALL
    state: present
    login_host: 127.0.0.1
    login_port: 3306
    login_user: root
    login_password: "{{ mariadb_root_password }}"

- name: Make sure the nextcloud container is created and running
  when: enable_nextcloud | default(false)
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: lscr.io/linuxserver/nextcloud:{{ nextcloud_version }}
    pull: true
    env:
      PUID: "3000"
      PGID: "3000"
      TZ: "{{ timezone }}"
    networks:
      - name: traefik
      - name: mariadb
    links:
      - mariadb
    hostname: server-nextcloud
    state: started
    volumes:
      - "{{ nextcloud_config_dir }}:/config"
      - "{{ nextcloud_data_dir }}:/data"
    labels:
      traefik.enable: "true"
      traefik.docker.network: traefik
      # routers // ui
      traefik.http.routers.nextcloud-web.rule: Host(`{{ container_name }}.{{ host }}`)
      traefik.http.routers.nextcloud-web.service: nextcloud-ui
      # services
      traefik.http.services.nextcloud-ui.loadbalancer.server.port: "80"
      # middlewares
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.nextcloud-ratelimit.ratelimit.average: "5"
      traefik.http.middlewares.nextcloud-ratelimit.ratelimit.burst: "1000"
      traefik.http.middlewares.nextcloud-compress.compress: "true"
      # middlewares for routers
      traefik.http.routers.nextcloud-web.middlewares: nextcloud-ratelimit,nextcloud-compress,redirect-to-https
      #
      # Watchtower
      com.centurylinklabs.watchtower.enable: "true"
    restart_policy: unless-stopped
